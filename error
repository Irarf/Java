-------------------------------------------------------------------------------
Test set: MapReduceTest
-------------------------------------------------------------------------------
Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.878 sec <<< FAILURE! - in MapReduceTest
testReducer(MapReduceTest)  Time elapsed: 0.783 sec  <<< ERROR!
java.lang.IncompatibleClassChangeError: Found class org.apache.hadoop.mapreduce.TaskInputOutputContext, but interface was expected
	at MapReduceTest.testReducer(MapReduceTest.java:54)

testMapper(MapReduceTest)  Time elapsed: 0.051 sec  <<< ERROR!
org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 

Misplaced argument matcher detected here:

-> at org.apache.hadoop.mrunit.internal.mapreduce.AbstractMockContextWrapper.createCommon(AbstractMockContextWrapper.java:59)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(anyObject());
    verify(mock).someMethod(contains("foo"))

Also, this error might show up because you use argument matchers with methods that cannot be mocked.
Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().

	at MapReduceTest.testMapper(MapReduceTest.java:43)

testMapReduce(MapReduceTest)  Time elapsed: 0.019 sec  <<< ERROR!
java.lang.IncompatibleClassChangeError: Found class org.apache.hadoop.mapreduce.TaskInputOutputContext, but interface was expected
	at MapReduceTest.testMapReduce(MapReduceTest.java:63)
